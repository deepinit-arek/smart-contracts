{
  "name": "@melonproject/smart-contracts",
  "version": "0.8.9",
  "description": "Technology Regulated Investment Funds",
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "start": "babel-node utils/main.js",
    "lint": "npm run lint:eslint && npm run lint:solium",
    "lint:solium": "solium --dir .",
    "lint:eslint": "eslint .",
    "oyente": "oyente -s src/Fund.sol",
    "devchain": "ganache-cli --gasLimit 0x7a1200 --defaultBalanceEther 100000000000",
    "test": "npm run test:ava",
    "test:ava": "CHAIN_ENV=development ava --serial --verbose",
    "test:unit": "CHAIN_ENV=development ava --files tests/unit/**",
    "compile": "babel-node utils/compile.js",
    "deploy": "CHAIN_ENV=development babel-node utils/deploy/contracts.js",
    "deploy:kovan": "CHAIN_ENV=kovan babel-node utils/deploy/contracts.js",
    "deploy:kovanCompetition": "CHAIN_ENV=kovanCompetition babel-node utils/deploy/contracts.js",
    "deploy:live": "CHAIN_ENV=live babel-node utils/deploy/contracts.js",
    "docs:server": "cd scripts/doxity && ./node_modules/.bin/gatsby develop",
    "docs:build": "doxity build",
    "babel-build": "babel utils/lib/ --out-dir utils/build",
    "append-json": "find out/ -name '*.abi' | xargs -t -I{} cp {} {}.json",
    "prepublishOnly": "npm run babel-build && npm run append-json",
    "concatenate-contracts": "bash ./utils/etherscan/concatenateContracts.sh"
  },
  "files": [
    "out/**/*.json",
    "out/**/*.abi",
    "utils/info",
    "utils/config",
    "utils/build",
    "addressBook.json"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/melonproject/protocol.git"
  },
  "keywords": [
    "Ethereum",
    "Protocol",
    "Melon"
  ],
  "author": "“Melonport AG <“team@melonport.com”>",
  "license": "GPL-3.0",
  "bugs": {
    "url": "https://github.com/melonproject/protocol/issues"
  },
  "homepage": "https://github.com/melonproject/protocol#readme",
  "devDependencies": {
    "@digix/doxity": "^0.5.2",
    "ava": "^0.25.0",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^7.2.3",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-stage-0": "^6.24.1",
    "babel-runtime": "^6.26.0",
    "eslint": "^4.15.0",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-config-prettier": "^2.7.0",
    "eslint-plugin-ava": "^4.4.0",
    "eslint-plugin-flowtype": "^2.39.1",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-react": "^7.5.1",
    "flow-bin": "^0.63.1",
    "prettier-eslint": "^8.2.2",
    "solium": "^1.1.0"
  },
  "dependencies": {
    "0x.js": "^0.35.0",
    "@0xproject/sol-compiler": "^0.5.2",
    "bignumber.js": "^4.1.0",
    "ethereumjs-testrpc": "^4.1.3",
    "ganache-cli": "^6.1.4",
    "mkdirp": "^0.5.1",
    "request-promise": "^4.2.2",
    "truffle-workflow-compile": "^1.0.6",
    "web3": "^1.0.0-beta.34"
  },
  "ava": {
    "files": [
      "tests/integration/fundShares.js",
      "tests/integration/fundTrading.js",
      "tests/integration/competitionRegistration.js",
      "tests/integration/competitionPayout.js",
      "tests/integration/centralizedExchange.js",
      "tests/integration/ethfinexTrading.js",
      "tests/integration/simpleMarketWithApprove.js",
      "tests/integration/redeemMaliciousAsset.js",
      "tests/integration/kyberTrading.js",
      "tests/integration/0xTrading.js",
      "tests/integration/tradingAlternativeToken.js",
      "tests/unit/pricefeed/priceFeed.js",
      "tests/unit/pricefeed/canonicalPriceFeed.js",
      "tests/unit/pricefeed/operatorStaking.js",
      "tests/unit/competitions/registration.js",
      "tests/unit/competitions/redeem.js",
      "tests/unit/competitions/version.js",
      "tests/unit/competitions/whitelist.js",
      "tests/unit/compliance/noCompliance.js",
      "tests/unit/compliance/onlyManager.js",
      "tests/unit/compliance/picopsCompliance.js",
      "tests/unit/governance/governance.js",
      "tests/unit/riskmgmt/rmMakeOrders.js",
      "tests/unit/version/version.js",
      "tests/unit/fundRanking.js"
    ],
    "tap": true,
    "babel": "inherit",
    "require": [
      "babel-register"
    ]
  }
}
